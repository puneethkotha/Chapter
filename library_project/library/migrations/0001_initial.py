# Generated by Django 5.2.1 on 2025-05-12 03:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('author_id', models.BigAutoField(db_column='AUTHOR_ID', primary_key=True, serialize=False)),
                ('fname', models.CharField(db_column='FNAME', max_length=50)),
                ('lname', models.CharField(db_column='LNAME', max_length=50)),
                ('street', models.CharField(db_column='STREET', max_length=50)),
                ('city', models.CharField(db_column='CITY', max_length=50)),
                ('state', models.CharField(blank=True, db_column='STATE', max_length=50, null=True)),
                ('country', models.CharField(db_column='COUNTRY', max_length=50)),
                ('postal_code', models.CharField(db_column='POSTAL_CODE', max_length=20)),
                ('email', models.EmailField(db_column='EMAIL', max_length=254)),
            ],
            options={
                'db_table': 'PJI_AUTHOR',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('book_id', models.BigAutoField(db_column='BOOK_ID', primary_key=True, serialize=False)),
                ('book_name', models.CharField(db_column='BOOK_NAME', max_length=100)),
            ],
            options={
                'db_table': 'PJI_BOOK',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.BigAutoField(db_column='EVENT_ID', primary_key=True, serialize=False)),
                ('event_name', models.CharField(db_column='EVENT_NAME', max_length=100)),
                ('start_dt', models.DateTimeField(db_column='START_DT')),
                ('end_dt', models.DateTimeField(db_column='END_DT')),
                ('attd_no', models.BigIntegerField(db_column='ATTD_NO')),
                ('event_type', models.CharField(choices=[('E', 'Exhibition'), ('S', 'Seminar')], db_column='EVENT_TYPE', max_length=1)),
            ],
            options={
                'db_table': 'PJI_EVENT',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('sponsor_id', models.BigAutoField(db_column='SPONSOR_ID', primary_key=True, serialize=False)),
                ('sponsor_type', models.CharField(choices=[('I', 'Individual'), ('O', 'Organization')], db_column='SPONSOR_TYPE', max_length=1)),
            ],
            options={
                'db_table': 'PJI_SPONSOR',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('invoice_id', models.BigAutoField(db_column='INVOICE_ID', primary_key=True, serialize=False)),
                ('invoice_date', models.DateTimeField(db_column='INVOICE_DATE')),
                ('invoice_amt', models.DecimalField(db_column='INVOICE_AMT', decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'PJI_INVOICE',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StudyRoom',
            fields=[
                ('room_id', models.BigAutoField(db_column='ROOM_ID', primary_key=True, serialize=False)),
                ('capacity', models.IntegerField(db_column='CAPACITY')),
            ],
            options={
                'db_table': 'PJI_STUDY_ROOM',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('topic_id', models.BigAutoField(db_column='TOPIC_ID', primary_key=True, serialize=False)),
                ('topic_name', models.CharField(db_column='TOPIC_NAME', max_length=50)),
            ],
            options={
                'db_table': 'PJI_TOPIC',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BookAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(db_column='PJI_AUTHOR_AUTHOR_ID', on_delete=django.db.models.deletion.CASCADE, to='library.author')),
                ('book', models.ForeignKey(db_column='PJI_BOOK_BOOK_ID', on_delete=django.db.models.deletion.CASCADE, to='library.book')),
            ],
            options={
                'db_table': 'PJI_BOOK_AUTHOR',
                'managed': True,
                'unique_together': {('book', 'author')},
            },
        ),
        migrations.AddField(
            model_name='book',
            name='authors',
            field=models.ManyToManyField(through='library.BookAuthor', to='library.author'),
        ),
        migrations.CreateModel(
            name='BookCopy',
            fields=[
                ('copy_id', models.BigAutoField(db_column='COPY_ID', primary_key=True, serialize=False)),
                ('status', models.CharField(db_column='STATUS', max_length=20)),
                ('book', models.ForeignKey(db_column='PJI_BOOK_BOOK_ID', on_delete=django.db.models.deletion.CASCADE, to='library.book')),
            ],
            options={
                'verbose_name_plural': 'Book copies',
                'db_table': 'PJI_BOOK_COPY',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('cust_id', models.BigAutoField(db_column='CUST_ID', primary_key=True, serialize=False)),
                ('fname', models.CharField(db_column='FNAME', max_length=50)),
                ('lname', models.CharField(db_column='LNAME', max_length=50)),
                ('phone', models.CharField(db_column='PHONE', max_length=15)),
                ('email', models.EmailField(db_column='EMAIL', max_length=254)),
                ('id_type', models.CharField(db_column='ID_TYPE', max_length=50)),
                ('id_no', models.CharField(db_column='ID_NO', max_length=30)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'PJI_CUSTOMER',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Exhibition',
            fields=[
                ('event', models.OneToOneField(db_column='EVENT_ID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='library.event')),
                ('expenses', models.DecimalField(db_column='EXPENSES', decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'PJI_EXHIBITION',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Seminar',
            fields=[
                ('event', models.OneToOneField(db_column='EVENT_ID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='library.event')),
                ('est_auth', models.IntegerField(blank=True, db_column='EST_AUTH', null=True)),
            ],
            options={
                'db_table': 'PJI_SEMINAR',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('sponsor', models.OneToOneField(db_column='SPONSOR_ID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='library.sponsor')),
                ('fname', models.CharField(db_column='FNAME', max_length=50)),
                ('lname', models.CharField(db_column='LNAME', max_length=50)),
            ],
            options={
                'db_table': 'PJI_INDIVIDUAL',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('sponsor', models.OneToOneField(db_column='SPONSOR_ID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='library.sponsor')),
                ('org_name', models.CharField(db_column='ORG_NAME', max_length=50)),
            ],
            options={
                'db_table': 'PJI_ORG',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.BigAutoField(db_column='PAYMENT_ID', primary_key=True, serialize=False)),
                ('payment_date', models.DateTimeField(db_column='PAYMENT_DATE')),
                ('pay_method', models.CharField(choices=[('Cash', 'Cash'), ('Credit', 'Credit Card'), ('Debit', 'Debit Card'), ('PayPal', 'PayPal')], db_column='PAY_METHOD', max_length=20)),
                ('cardholder_name', models.CharField(blank=True, db_column='CARDHOLDER_NAME', max_length=100, null=True)),
                ('payment_amt', models.DecimalField(db_column='PAYMENT_AMT', decimal_places=2, max_digits=10)),
                ('invoice', models.ForeignKey(blank=True, db_column='PJI_INVOICE_INVOICE_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='library.invoice')),
            ],
            options={
                'db_table': 'PJI_PAYMENT',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rental',
            fields=[
                ('rental_id', models.BigAutoField(db_column='RENTAL_ID', primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Borrowed', 'Borrowed'), ('Returned', 'Returned'), ('Late', 'Late'), ('Lost', 'Lost')], db_column='STATUS', max_length=25)),
                ('borrow_date', models.DateTimeField(db_column='BORROW_DATE')),
                ('exp_return_dt', models.DateTimeField(db_column='EXP_RETURN_DT')),
                ('actual_return_dt', models.DateTimeField(blank=True, db_column='ACTUAL_RETURN_DT', null=True)),
                ('book_copy', models.ForeignKey(blank=True, db_column='PJI_BOOK_COPY_COPY_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='library.bookcopy')),
                ('customer', models.ForeignKey(blank=True, db_column='PJI_CUSTOMER_CUST_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='library.customer')),
                ('invoice', models.OneToOneField(blank=True, db_column='PJI_INVOICE_INVOICE_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='library.invoice')),
            ],
            options={
                'db_table': 'PJI_RENTAL',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('reserve_id', models.BigAutoField(db_column='RESERVE_ID', primary_key=True, serialize=False)),
                ('topic_desc', models.CharField(db_column='TOPIC_DESC', max_length=255)),
                ('start_dt', models.DateTimeField(db_column='START_DT')),
                ('end_dt', models.DateTimeField(db_column='END_DT')),
                ('group_size', models.IntegerField(db_column='GROUP_SIZE')),
                ('customer', models.ForeignKey(blank=True, db_column='PJI_CUSTOMER_CUST_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='library.customer')),
                ('study_room', models.ForeignKey(blank=True, db_column='PJI_STUDY_ROOM_ROOM_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='library.studyroom')),
            ],
            options={
                'db_table': 'PJI_RESERVATION',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='book',
            name='topic',
            field=models.ForeignKey(blank=True, db_column='PJI_TOPIC_TOPIC_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='library.topic'),
        ),
        migrations.CreateModel(
            name='ExhibitionAttendance',
            fields=[
                ('reg_id', models.BigAutoField(db_column='REG_ID', primary_key=True, serialize=False)),
                ('customer', models.ForeignKey(blank=True, db_column='PJI_CUSTOMER_CUST_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='library.customer')),
                ('exhibition', models.ForeignKey(blank=True, db_column='PJI_EXHIBITION_EVENT_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='library.exhibition')),
            ],
            options={
                'db_table': 'PJI_EXH_ATTD',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='exhibition',
            name='attendees',
            field=models.ManyToManyField(through='library.ExhibitionAttendance', to='library.customer'),
        ),
        migrations.CreateModel(
            name='SeminarAttendance',
            fields=[
                ('invitation_id', models.BigAutoField(db_column='INVITATION_ID', primary_key=True, serialize=False)),
                ('author', models.ForeignKey(blank=True, db_column='PJI_AUTHOR_AUTHOR_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='library.author')),
                ('seminar', models.ForeignKey(db_column='PJI_SEMINAR_EVENT_ID', on_delete=django.db.models.deletion.CASCADE, to='library.seminar')),
            ],
            options={
                'db_table': 'PJI_SEMINAR_ATTD',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='seminar',
            name='authors',
            field=models.ManyToManyField(through='library.SeminarAttendance', to='library.author'),
        ),
        migrations.CreateModel(
            name='SeminarSponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(db_column='AMOUNT', decimal_places=2, max_digits=10)),
                ('sponsor', models.ForeignKey(db_column='PJI_SPONSOR_SPONSOR_ID', on_delete=django.db.models.deletion.CASCADE, to='library.sponsor')),
                ('seminar', models.ForeignKey(blank=True, db_column='PJI_SEMINAR_EVENT_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='library.seminar')),
            ],
            options={
                'db_table': 'PJI_SEM_SPONSOR',
                'managed': True,
                'unique_together': {('seminar', 'sponsor')},
            },
        ),
    ]
